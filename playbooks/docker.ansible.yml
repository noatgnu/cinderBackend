---
- name: Deploy CinderBackend Services
  hosts: all
  become: yes

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Ensure Docker Compose is installed
      get_url:
        url: "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)"
        dest: /usr/local/bin/docker-compose
        mode: '0755'
      when: ansible_distribution == "Ubuntu"

    - name: Clone the repository
      git:
        repo: 'https://github.com/noatgnu/cinderbackend.git'
        dest: /opt/cinderbackend

    - name: Change to the project directory
      command: chdir=/opt/cinderbackend /bin/bash -c "true"

    - name: Build and start the containers
      command: chdir=/opt/cinderbackend docker-compose up --build -d

    - name: Apply database migrations
      command: chdir=/opt/cinderbackend docker-compose exec cinderbackend python manage.py migrate

    - name: Create a superuser (optional)
      command: chdir=/opt/cinderbackend docker-compose exec -T cinderbackend python manage.py createsuperuser
      ignore_errors: yes