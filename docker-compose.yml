version: '3.8'
services:
  cinderbackend:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile
    container_name: cinderbackend
    ports:
      - "8000:8000"
    env_file:
      - .env
    networks:
      - cinderbackend-net
    volumes:
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles

  cinderbackend-worker:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile
    container_name: cinderbackend-worker
    command: python manage.py rqworker default
    env_file:
      - .env
    networks:
      - cinderbackend-net
    volumes:
      - ./media:/app/media

  frontend:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-frontend-dev
    container_name: frontend
    ports:
      - "3000:80"
    networks:
      - cinderbackend-net

  nginx-cinderbackend:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-nginx
    container_name: nginx-cinderbackend
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./media:/media/
      - ./staticfiles:/static/
      - ./certs:/etc/nginx/certs
    depends_on:
      - cinderbackend
      - frontend
      - certs
    networks:
      - cinderbackend-net

  dbcinderbackend:
    container_name: dbcinderbackend
    image: postgres:14
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - cinderbackend-net

  rediscinderbackend:
    container_name: rediscinderbackend
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-redis
    restart: always
    environment:
      - REDIS_PASSWORD=redis
    ports:
      - "6379:6379"
    networks:
      - cinderbackend-net

  certs:
    image: alpine:latest
    container_name: certs
    command: >
      /bin/sh -c "
      apk add --no-cache openssl &&
      mkdir -p /certs &&
      openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /certs/nginx.key -out /certs/nginx.crt -subj '/CN=localhost'
      "
    volumes:
      - ./certs:/certs
    networks:
      - cinderbackend-net

networks:
  cinderbackend-net: