version: '3.8'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:ro
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - ./media:/media
      - ./staticfiles:/static
    networks:
      - cinderbackend-net

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: acme-companion
    depends_on:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs:rw
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - ./acme:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=your-email@example.com
    networks:
      - cinderbackend-net

  cinderbackend:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile
    container_name: cinderbackend
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=dbcinderbackend
      - REDIS_HOST=rediscinderbackend
      - CORS_ORIGIN_WHITELIST=http://localhost,http://localhost:4200,http://172.31.0.5
      - ALLOWED_HOSTS=localhost,172.31.0.5,localhost:8000
      - VIRTUAL_HOST=yourdomain.com
      - VIRTUAL_PATH=/api
      - LETSENCRYPT_HOST=yourdomain.com
      - LETSENCRYPT_EMAIL=your-email@example.com
    networks:
      - cinderbackend-net
    volumes:
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles

  cinderbackend-worker:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile
    container_name: cinderbackend-worker
    command: python manage.py rqworker default
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=dbcinderbackend
      - REDIS_HOST=rediscinderbackend
    networks:
      - cinderbackend-net
    volumes:
      - ./media:/app/media

  frontend:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-frontend
    container_name: frontend
    env_file:
      - /opt/cinderbackend/frontend.env
    networks:
      - cinderbackend-net

  dbcinderbackend:
    container_name: dbcinderbackend
    image: postgres:14
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - cinderbackend-net

  rediscinderbackend:
    container_name: rediscinderbackend
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile-redis
    restart: always
    environment:
      - REDIS_PASSWORD=redis
    ports:
      - "6379:6379"
    networks:
      - cinderbackend-net

networks:
  cinderbackend-net: